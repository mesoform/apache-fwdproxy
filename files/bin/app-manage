#!/bin/bash
set -eo pipefail


preStart() {
    _log "Configuring application"
    touch /usr/local/apache/htdocs/health
    # Add containers subnet to a local file which we can use for dynamically
    # configuring Apache
    ip route list scope link | awk '{print $1}' > /etc/host_subnet
    configureApp
}


health() {
    msg=$(curl --fail -sS http://localhost:33000/health)
    status=$?
    if [ ! ${status} -eq 0 ]; then
        echo ${msg}
        exit ${status}
    else
        return ${status}
    fi
}

reload() {
    health
    if [ $? -eq 0 ]; then
        _log "Configuring application"
        configureApp
        _log "reloading application"
        /usr/local/apache/bin/apachectl \
            -f /etc/apache-fwdproxy/httpd.conf \
            -k graceful \
            -D APACHE-FWDPROXY
    else
        _log "WARNING: application not running. Can't reload"
    fi

}

configureApp() {
    consul-template -once -dedup -consul-addr localhost:8500 \
        -template "/etc/apache-fwdproxy/fwdproxy.conf.ctmpl:/etc/apache-fwdproxy/fwdproxy.conf" \
        -template "/etc/apache-fwdproxy/rvrsproxy.conf.ctmpl:/etc/apache-fwdproxy/rvrsproxy.conf"

}

_log() {
    echo "    $(date -u '+%Y-%m-%d %H:%M:%S') containerpilot: $@"
}

# ---------------------------------------------------
# parse arguments

# Get function list
funcs=($(declare -F -p | cut -d " " -f 3))

until
    if [ ! -z "$1" ]; then
        # check if the first arg is a function in this file, or use a default
        if [[ " ${funcs[@]} " =~ " $1 " ]]; then
            cmd=$1
            shift 1
        fi

        ${cmd} "$@"
        if [ $? == 127 ]; then
            help
        fi

        exit
    else
        health
    fi
do
    echo
done

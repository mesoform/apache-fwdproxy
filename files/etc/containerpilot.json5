/*
Application Orchestration for a Concierge Managed Application
http://www.mesoform.com/blog-listing/info/the-concierge-paradigm
*/
{
  consul: 'localhost:8500',
  logging: {
    level: '{{ .LOG_LEVEL }}',
    format: '{{ .LOG_FORMAT }}'  },
  jobs: [
    {
      name: "platform-integration-setup",
      exec: "/usr/local/bin/platform_integration_setup.sh"
    },
    {
      name: 'apache-fwdproxy',
      exec: [
        "/usr/local/apache/bin/apachectl -e debug -Xf /etc/apache-fwdproxy/httpd.conf -k start"
      ],
      port: "30031",
      health: {
        exec: 'curl http://localhost:30031',
        interval: "5",
        ttl: "30",
        timeout: "3",
      },
      tags: [
        "apache",
        "googleproxy"
      ],
      when: {
        source: "platform-integration-setup",
        once: "exitSuccess"
      }
    },
    {
      name: "scheduling-status-healthy",
      restarts: "unlimited",
      exec: ["zabbix_sender",
        "-c", "/etc/coprocesses/zabbix/zabbix_agentd.conf",
        "--key", "container.state",
        "--value", "1"],
      when: {
        interval: "10s",
      }
    },
/*  ToDo: sending state=0 when main service is unhealthy
    Leaving this line in for now but feel that this will conflict when trying
    to scale containers. I.e. a process being unhealthy but container still
    running will mean docker scale will be using incorrect deployment.state value
    {
      name: "scheduling_status_unhealthy",
      restarts: "unlimited",
      exec: ["zabbix_sender",
        "-c", "/etc/coprocesses/zabbix/zabbix_agentd.conf",
        "--key", "container.state",
        "--value", "0"],
      when: {
        source: "apache-fwdproxy",
        once: "unhealthy",
        interval: "10s",
        timeout: "3s"
      }
    },     */
    {
      name: 'zabbix-agent',
      exec: ["/usr/sbin/zabbix_agentd", "-fc", "/etc/coprocesses/zabbix/zabbix_agentd.conf"],
      restarts: "unlimited",
      health: {
        exec: 'zabbix_agentd -t agent.ping',
        interval: 30,
        ttl: 60,
        timeout: 5
      },
      when: {
        source: "platform-integration-setup",
        once: "exitSuccess"
      }
    },
    {
      name: "post-stop",
      exec: ["zabbix_sender",
             "-c", "/etc/coprocesses/zabbix/zabbix_agentd.conf",
             "--key", "container.state",
             "--value", "0"],
      when: {
        once: "shutdown"
      }
    },
    {
      name: "consul-agent",
      restarts: "unlimited",
      exec: [
        "/usr/local/bin/consul", "agent",
        "-config-dir=/config",
        "-data-dir=/tmp",
        "-rejoin",
        "-retry-join", "{{ .SVC_DISCOVERY }}",
        "-retry-max", "10",
        "-retry-interval", "10s"
      ],
/*      health: {
        exec: "consul join {{ .SVC_DISCOVERY }}",
        interval: 5,
        ttl: 10
      },
*/
      when: {
        source: "platform-integration-setup",
        once: "exitSuccess"
      }
    }
  ]
}

{
  consul: '{{ if .CONSUL_AGENT }}localhost{{ else }}{{ .SVC_DISCOVERY | default "consul"}}{{ end }}:8500',
  logging: {
    level: '{{ .LOG_LEVEL | default "DEBUG" }}',
    format: '{{ .LOG_FORMAT | default "default" }}'  },
  jobs: [
    {
      name: "platform_integration_setup",
      exec: "/usr/local/bin/setdomain.sh"
    },
    {
      name: 'apache-fwdproxy',
      exec: [
        "/usr/local/apache/bin/apachectl -k start"
      ],
      port: "300031",
      health: {
        exec: 'curl http://localhost',
        interval: "5",
        ttl: "5",
        timeout: "1",
      },
      tags: [
        "apache",
        "googleproxy"
      ],
      {{ if .CONSUL_AGENT }}when: {
        source: "consul_agent",
        once: "healthy"
      }{{ end }}    },
    {
      name: "scheduling_status_healthy",
      restarts: "unlimited",
      exec: ["zabbix_sender",
        "-c", "/etc/coprocesses/zabbix/zabbix_agentd.conf",
        "--key", "container.state",
        "--value", "1"],
      when: {
        interval: "10s",
      }
    },
/*  ToDo: sending state=0 when main service is unhealthy
    Leaving this line in for now but feel that this will conflict when trying
    to scale containers. I.e. a process being unhealthy but container still
    running will mean docker scale will be using incorrect deployment.state value
    {
      name: "scheduling_status_unhealthy",
      restarts: "unlimited",
      exec: ["zabbix_sender",
        "-c", "/etc/coprocesses/zabbix/zabbix_agentd.conf",
        "--key", "container.state",
        "--value", "0"],
      when: {
        source: "apache-fwdproxy",
        once: "unhealthy",
        interval: "10s",
        timeout: "3s"
      }
    },     */
    {
      name: "zabbix_agent",
      exec: ["/usr/sbin/zabbix_agentd", "-fc", "/etc/coprocesses/zabbix/zabbix_agentd.conf"],
      restarts: "unlimited",
      health: {
        exec: 'zabbix_agentd -t agent.ping',
        interval: 30,
        ttl: 60,
        timeout: 5
      },
      when: {
        source: "pre_start",
        once: "exitSuccess"
      }
    },
    {
      name: "post_stop",
      exec: ["zabbix_sender",
             "-c", "/etc/coprocesses/zabbix/zabbix_agentd.conf",
             "--key", "container.state",
             "--value", "0"],
      when: {
        once: "shutdown"
      }
    },
{{ if .CONSUL_AGENT }}{
      name: "consul_agent",
      restarts: "unlimited",
      exec: [
        "/usr/local/bin/consul", "agent",
        "-data-dir=/data",
        "-config-dir=/config"
      ],
      health: {
        exec: 'consul join {{ .SVC_DISCOVERY | default "consul"}}',
        interval: 5,
        ttl: 10
      },
{% if pre_start is defined %}
      when: {
        source: "pre_start",
        once: "exitSuccess"
      }
{% else %}
      when: {
        source: "platform_integration_setup",
        once: "exitSuccess"
      }
{% endif %}
    }{{ end }}
  ]
}
